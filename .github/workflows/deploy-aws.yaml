name: Deploy Backend to Amazon ECR

on:
  push:
    branches:
      - "DS-33-aws-workflow"
      - "main"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    # - name: Login to Amazon ECR
    #   run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Login to Amazon ECR
        id: login ecr
        uses: aws/actions/amazon-ecr-login@v1

     - name: Build and push Docker image
       run: |
         docker build -t ms-propiedades-img .
         docker tag ms-propiedades-img:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY}}:latest
         docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{secrets.AWS_ECR_REPOSITORY}}:latest
    # - name: Build, Tag, and Push image to Amazon ECR
    #   id: build-image
    #   env:
    #      ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #      ECR_RESPOSITORY: ms-propiedades
    #      IMAGE_TAG: latest
    #   run: 
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

